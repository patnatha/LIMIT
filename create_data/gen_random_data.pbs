#!/bin/sh

#PBS -N gen_random_data
#PBS -M patnatha@med.umich.edu
#PBS -m abe

#PBS -A leeschro_armis
#PBS -q armis
#PBS -l qos=armis

# Change the number of cores (ppn=1), amount of memory, and walltime:
#PBS -l nodes=1:ppn=1,mem=4gb
#PBS -l walltime=1:00:00
#PBS -j oe
#PBS -V

####  End PBS preamble

#  Show list of CPUs you ran on, if you're running under PBS
if [ -n "$PBS_NODEFILE" ]; then cat $PBS_NODEFILE; fi

#  Change to the directory you submitted from
if [ -n "$PBS_O_WORKDIR" ]; then cd $PBS_O_WORKDIR; fi

#Load the R module
module load R 

#Parse incoming options
OPTS=`getopt -o o:: --long output:: -n 'parse-options' -- "$@"`
if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi
eval set -- "$OPTS"

#Get default output directory from local source file 
source ../output_dir.sh
OUTPUT_DIR=$OUTPUT_DIR_grd

#Parse command line arguments
while true; do
  case "$1" in
    -o | --output ) OUTPUT_FILE=$2; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

#Create the run directory
THE_SCRIPT="gen_random_data.R"
RUN_DIR=`readlink -f ${OUTPUT_DIR}/$(date '+%Y-%m-%d.%H-%M-%S')`
echo 'OUTPUT: '$RUN_DIR
if [ ! -d "$RUN_DIR" ]; then
    mkdir $RUN_DIR
else
    exit
fi

#Copy over the necessary files to run
cp $THE_SCRIPT $RUN_DIR/.
cp .Renviron $RUN_DIR/.
cd $RUN_DIR

Rscript gene_random_data.R --output ${OUTPUT_DIR}

