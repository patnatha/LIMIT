#!/bin/sh

#PBS -N Nate_LIMIT
#PBS -M patnatha@med.umich.edu
#PBS -m abe

#PBS -A leeschro_armis
#PBS -q armis
#PBS -l qos=armis

# Change the number of cores (ppn=1), amount of memory, and walltime:
#PBS -l nodes=1:ppn=1,mem=2000mb
#PBS -l walltime=0:05:00
#PBS -j oe
#PBS -V

####  End PBS preamble

#  Show list of CPUs you ran on, if you're running under PBS
if [ -n "$PBS_NODEFILE" ]; then cat $PBS_NODEFILE; fi

#  Change to the directory you submitted from
if [ -n "$PBS_O_WORKDIR" ]; then cd $PBS_O_WORKDIR; fi

#Parse incoming options
OPTS=`getopt -o i: --long input: -o o:: --long output:: -n 'parse-options' -- "$@"`
if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi
eval set -- "$OPTS"

#Get default output_dir
source ./output_dir.sh
OUTPUT_DIR=$OUTPUT_DIR_nl

#Parse incoming files
INPUT_FILE=''
while true; do
  case "$1" in
    -i | --input ) INPUT_FILE=$2; shift ;;
    -o | --output ) OUTPUT_DIR=$2; shift;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

#Check to make sur output_file was set
if [ -z $INPUT_FILE ]; then
    echo "INPUT_FILE location has not been specificed, use -i/--input"
    exit
else
    #Convert the relative path to absolute path
    INPUT_FILE=`readlink -f $INPUT_FILE`
fi

#Create the run directory
THE_SCRIPT="Nate_LIMIT.R"
RUN_DIR=`readlink -f ${OUTPUT_DIR}/$(date '+%Y-%m-%d.%H-%M-%S')`
echo "Output: "$RUN_DIR
if [ ! -d "$RUN_DIR" ]; then
    mkdir $RUN_DIR
else
    #This directory already exists...EXIT
    exit
fi

#Copy over the SCRIPT to run and necessary files
cp $THE_SCRIPT $RUN_DIR/.
cp .Renviron $RUN_DIR/.
cd $RUN_DIR

#Load the R module
module load R

#Submit the script 
Rscript Nate_LIMIT.R --input ${INPUT_FILE} --output ${RUN_DIR}

